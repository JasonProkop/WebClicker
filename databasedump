--
-- PostgreSQL database dump
--

SET statement_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- Name: postgres; Type: COMMENT; Schema: -; Owner: postgres
--

COMMENT ON DATABASE postgres IS 'default administrative connection database';


--
-- Name: webclicker; Type: SCHEMA; Schema: -; Owner: dylan
--

CREATE SCHEMA webclicker;


ALTER SCHEMA webclicker OWNER TO dylan;

--
-- Name: SCHEMA webclicker; Type: COMMENT; Schema: -; Owner: dylan
--

COMMENT ON SCHEMA webclicker IS 'This is the main database for CMPT 370 project';


--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: Polls; Type: TABLE; Schema: public; Owner: max; Tablespace: 
--

CREATE TABLE "Polls" (
    poll_id integer NOT NULL,
    poll_name text DEFAULT 'Created Poll'::text
);


ALTER TABLE public."Polls" OWNER TO max;

--
-- Name: TABLE "Polls"; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON TABLE "Polls" IS 'Stores each pool by a ID number';


--
-- Name: Polls_poll_id_seq; Type: SEQUENCE; Schema: public; Owner: max
--

CREATE SEQUENCE "Polls_poll_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."Polls_poll_id_seq" OWNER TO max;

--
-- Name: Polls_poll_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: max
--

ALTER SEQUENCE "Polls_poll_id_seq" OWNED BY "Polls".poll_id;


--
-- Name: Questions; Type: TABLE; Schema: public; Owner: max; Tablespace: 
--

CREATE TABLE "Questions" (
    question_poll_id integer NOT NULL,
    question_id integer NOT NULL,
    question_type text,
    question_options text
);


ALTER TABLE public."Questions" OWNER TO max;

--
-- Name: TABLE "Questions"; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON TABLE "Questions" IS 'Contains all the questions for each poll';


--
-- Name: COLUMN "Questions".question_poll_id; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON COLUMN "Questions".question_poll_id IS 'refers to poll_id from polls';


--
-- Name: Questions_question_id_seq; Type: SEQUENCE; Schema: public; Owner: max
--

CREATE SEQUENCE "Questions_question_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public."Questions_question_id_seq" OWNER TO max;

--
-- Name: Questions_question_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: max
--

ALTER SEQUENCE "Questions_question_id_seq" OWNED BY "Questions".question_id;


--
-- Name: Responses; Type: TABLE; Schema: public; Owner: max; Tablespace: 
--

CREATE TABLE "Responses" (
    responses_poll_id integer NOT NULL,
    responses_questions_id integer NOT NULL,
    question_type text,
    question_options text
);


ALTER TABLE public."Responses" OWNER TO max;

--
-- Name: TABLE "Responses"; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON TABLE "Responses" IS 'contains the responses for each question';


--
-- Name: COLUMN "Responses".responses_poll_id; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON COLUMN "Responses".responses_poll_id IS 'refers to poll_id from polls';


--
-- Name: COLUMN "Responses".responses_questions_id; Type: COMMENT; Schema: public; Owner: max
--

COMMENT ON COLUMN "Responses".responses_questions_id IS 'refers to question_id from Questions';


--
-- Name: Toy; Type: TABLE; Schema: public; Owner: dylan; Tablespace: 
--

CREATE TABLE "Toy" (
    q1 text,
    q2a1 text,
    q2a2 text,
    q2a3 text,
    q3 text,
    q4 text
);


ALTER TABLE public."Toy" OWNER TO dylan;

--
-- Name: TABLE "Toy"; Type: COMMENT; Schema: public; Owner: dylan
--

COMMENT ON TABLE "Toy" IS 'Toy prototype';


SET search_path = webclicker, pg_catalog;

--
-- Name: Group; Type: TABLE; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

CREATE TABLE "Group" (
    group_id integer NOT NULL,
    group_name text NOT NULL
);


ALTER TABLE webclicker."Group" OWNER TO ubuntu;

--
-- Name: TABLE "Group"; Type: COMMENT; Schema: webclicker; Owner: ubuntu
--

COMMENT ON TABLE "Group" IS 'Categorizes polls into groups';


--
-- Name: GroupUser; Type: TABLE; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

CREATE TABLE "GroupUser" (
    groupuser_id integer NOT NULL,
    groupuser_group_id integer NOT NULL,
    groupuser_role text NOT NULL,
    groupuser_accepted boolean NOT NULL
);


ALTER TABLE webclicker."GroupUser" OWNER TO ubuntu;

--
-- Name: TABLE "GroupUser"; Type: COMMENT; Schema: webclicker; Owner: ubuntu
--

COMMENT ON TABLE "GroupUser" IS 'Categorizes users into subscribers or admins for a group';


--
-- Name: GroupUser_groupuser_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: ubuntu
--

CREATE SEQUENCE "GroupUser_groupuser_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."GroupUser_groupuser_id_seq" OWNER TO ubuntu;

--
-- Name: GroupUser_groupuser_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: ubuntu
--

ALTER SEQUENCE "GroupUser_groupuser_id_seq" OWNED BY "GroupUser".groupuser_id;


--
-- Name: Group_group_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: ubuntu
--

CREATE SEQUENCE "Group_group_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Group_group_id_seq" OWNER TO ubuntu;

--
-- Name: Group_group_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: ubuntu
--

ALTER SEQUENCE "Group_group_id_seq" OWNED BY "Group".group_id;


--
-- Name: Poll; Type: TABLE; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

CREATE TABLE "Poll" (
    poll_id integer NOT NULL,
    poll_name text NOT NULL,
    poll_group_id integer NOT NULL,
    poll_creation_datetime timestamp with time zone NOT NULL,
    poll_expiry_datetime timestamp with time zone,
    poll_start_datetime timestamp with time zone
);


ALTER TABLE webclicker."Poll" OWNER TO ubuntu;

--
-- Name: TABLE "Poll"; Type: COMMENT; Schema: webclicker; Owner: ubuntu
--

COMMENT ON TABLE "Poll" IS 'Contains all created polls';


--
-- Name: Poll_poll_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: ubuntu
--

CREATE SEQUENCE "Poll_poll_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Poll_poll_id_seq" OWNER TO ubuntu;

--
-- Name: Poll_poll_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: ubuntu
--

ALTER SEQUENCE "Poll_poll_id_seq" OWNED BY "Poll".poll_id;


--
-- Name: Question; Type: TABLE; Schema: webclicker; Owner: dylan; Tablespace: 
--

CREATE TABLE "Question" (
    question_id integer NOT NULL,
    question_text text NOT NULL,
    question_poll_id integer NOT NULL,
    question_user_id integer NOT NULL,
    question_type_id text NOT NULL
);


ALTER TABLE webclicker."Question" OWNER TO dylan;

--
-- Name: TABLE "Question"; Type: COMMENT; Schema: webclicker; Owner: dylan
--

COMMENT ON TABLE "Question" IS 'Contains every question made';


--
-- Name: QuestionType; Type: TABLE; Schema: webclicker; Owner: dylan; Tablespace: 
--

CREATE TABLE "QuestionType" (
    questiontype_id text NOT NULL,
    questiontype_type text NOT NULL
);


ALTER TABLE webclicker."QuestionType" OWNER TO dylan;

--
-- Name: TABLE "QuestionType"; Type: COMMENT; Schema: webclicker; Owner: dylan
--

COMMENT ON TABLE "QuestionType" IS 'Contains indices for each question type';


--
-- Name: Question_question_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: dylan
--

CREATE SEQUENCE "Question_question_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Question_question_id_seq" OWNER TO dylan;

--
-- Name: Question_question_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: dylan
--

ALTER SEQUENCE "Question_question_id_seq" OWNED BY "Question".question_id;


--
-- Name: Question_question_poll_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: dylan
--

CREATE SEQUENCE "Question_question_poll_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Question_question_poll_id_seq" OWNER TO dylan;

--
-- Name: Question_question_poll_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: dylan
--

ALTER SEQUENCE "Question_question_poll_id_seq" OWNED BY "Question".question_poll_id;


--
-- Name: Question_question_type_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: dylan
--

CREATE SEQUENCE "Question_question_type_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Question_question_type_id_seq" OWNER TO dylan;

--
-- Name: Question_question_type_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: dylan
--

ALTER SEQUENCE "Question_question_type_id_seq" OWNED BY "Question".question_type_id;


--
-- Name: Question_question_user_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: dylan
--

CREATE SEQUENCE "Question_question_user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."Question_question_user_id_seq" OWNER TO dylan;

--
-- Name: Question_question_user_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: dylan
--

ALTER SEQUENCE "Question_question_user_id_seq" OWNED BY "Question".question_user_id;


--
-- Name: Toy; Type: TABLE; Schema: webclicker; Owner: dylan; Tablespace: 
--

CREATE TABLE "Toy" (
    q1 text,
    q2a1 text,
    q2a2 text,
    q2a3 text,
    q3 text,
    q4 text
);


ALTER TABLE webclicker."Toy" OWNER TO dylan;

--
-- Name: TABLE "Toy"; Type: COMMENT; Schema: webclicker; Owner: dylan
--

COMMENT ON TABLE "Toy" IS 'Toy Example Program';


--
-- Name: User; Type: TABLE; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

CREATE TABLE "User" (
    user_id integer NOT NULL,
    user_name text NOT NULL,
    user_password text NOT NULL,
    user_email text NOT NULL,
    user_salt text NOT NULL,
    user_first_name text NOT NULL,
    user_last_name text NOT NULL
);


ALTER TABLE webclicker."User" OWNER TO ubuntu;

--
-- Name: TABLE "User"; Type: COMMENT; Schema: webclicker; Owner: ubuntu
--

COMMENT ON TABLE "User" IS 'Contains all user data.';


--
-- Name: User_user_id_seq; Type: SEQUENCE; Schema: webclicker; Owner: ubuntu
--

CREATE SEQUENCE "User_user_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE webclicker."User_user_id_seq" OWNER TO ubuntu;

--
-- Name: User_user_id_seq; Type: SEQUENCE OWNED BY; Schema: webclicker; Owner: ubuntu
--

ALTER SEQUENCE "User_user_id_seq" OWNED BY "User".user_id;


SET search_path = public, pg_catalog;

--
-- Name: poll_id; Type: DEFAULT; Schema: public; Owner: max
--

ALTER TABLE ONLY "Polls" ALTER COLUMN poll_id SET DEFAULT nextval('"Polls_poll_id_seq"'::regclass);


--
-- Name: question_id; Type: DEFAULT; Schema: public; Owner: max
--

ALTER TABLE ONLY "Questions" ALTER COLUMN question_id SET DEFAULT nextval('"Questions_question_id_seq"'::regclass);


SET search_path = webclicker, pg_catalog;

--
-- Name: group_id; Type: DEFAULT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "Group" ALTER COLUMN group_id SET DEFAULT nextval('"Group_group_id_seq"'::regclass);


--
-- Name: groupuser_id; Type: DEFAULT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "GroupUser" ALTER COLUMN groupuser_id SET DEFAULT nextval('"GroupUser_groupuser_id_seq"'::regclass);


--
-- Name: poll_id; Type: DEFAULT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "Poll" ALTER COLUMN poll_id SET DEFAULT nextval('"Poll_poll_id_seq"'::regclass);


--
-- Name: question_id; Type: DEFAULT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question" ALTER COLUMN question_id SET DEFAULT nextval('"Question_question_id_seq"'::regclass);


--
-- Name: question_poll_id; Type: DEFAULT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question" ALTER COLUMN question_poll_id SET DEFAULT nextval('"Question_question_poll_id_seq"'::regclass);


--
-- Name: question_user_id; Type: DEFAULT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question" ALTER COLUMN question_user_id SET DEFAULT nextval('"Question_question_user_id_seq"'::regclass);


--
-- Name: question_type_id; Type: DEFAULT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question" ALTER COLUMN question_type_id SET DEFAULT nextval('"Question_question_type_id_seq"'::regclass);


--
-- Name: user_id; Type: DEFAULT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "User" ALTER COLUMN user_id SET DEFAULT nextval('"User_user_id_seq"'::regclass);


SET search_path = public, pg_catalog;

--
-- Data for Name: Polls; Type: TABLE DATA; Schema: public; Owner: max
--

COPY "Polls" (poll_id, poll_name) FROM stdin;
\.


--
-- Name: Polls_poll_id_seq; Type: SEQUENCE SET; Schema: public; Owner: max
--

SELECT pg_catalog.setval('"Polls_poll_id_seq"', 1, false);


--
-- Data for Name: Questions; Type: TABLE DATA; Schema: public; Owner: max
--

COPY "Questions" (question_poll_id, question_id, question_type, question_options) FROM stdin;
\.


--
-- Name: Questions_question_id_seq; Type: SEQUENCE SET; Schema: public; Owner: max
--

SELECT pg_catalog.setval('"Questions_question_id_seq"', 1, false);


--
-- Data for Name: Responses; Type: TABLE DATA; Schema: public; Owner: max
--

COPY "Responses" (responses_poll_id, responses_questions_id, question_type, question_options) FROM stdin;
\.


--
-- Data for Name: Toy; Type: TABLE DATA; Schema: public; Owner: dylan
--

COPY "Toy" (q1, q2a1, q2a2, q2a3, q3, q4) FROM stdin;
nr	nr	nr	nr	nr	nr
on	on	nr	on	4	This is a test....
nr	nr	nr	nr	nr	nr
nr	nr	nr	nr	nr	nr
on	nr	on	nr	5	nr
on	on	on	on	7	nr
on	on	nr	nr	5	nr
on	on	on	on	7	cool!
on	on	on	on	1	nr
on	on	on	nr	5	nr
on	nr	nr	nr	nr	Sup
on	on	on	on	5	After you answer a question it should advance to the next question instead of having the user advance it manually.  But maintain the ability to go back to a question to revise a previous answer.
on	nr	nr	on	6	Points for answering questions, redeem points for money/legal downloads of media/coupons
on	on	nr	nr	5	nr
nr	nr	nr	nr	nr	nr
on	nr	nr	on	6	24 hour review period to determine if submitted poll contains appropriate/age-related content.\r\nTime limit.\r\nNumber of characters in a comment limit.\r\nSurveys become (un)available based on GPS location.
on	on	on	nr	4	"; drop table results - - just making sure you're sanitising that input 
on	nr	nr	nr	6	:P
nr	nr	nr	nr	nr	nr
\.


SET search_path = webclicker, pg_catalog;

--
-- Data for Name: Group; Type: TABLE DATA; Schema: webclicker; Owner: ubuntu
--

COPY "Group" (group_id, group_name) FROM stdin;
\.


--
-- Data for Name: GroupUser; Type: TABLE DATA; Schema: webclicker; Owner: ubuntu
--

COPY "GroupUser" (groupuser_id, groupuser_group_id, groupuser_role, groupuser_accepted) FROM stdin;
\.


--
-- Name: GroupUser_groupuser_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: ubuntu
--

SELECT pg_catalog.setval('"GroupUser_groupuser_id_seq"', 1, false);


--
-- Name: Group_group_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: ubuntu
--

SELECT pg_catalog.setval('"Group_group_id_seq"', 1, false);


--
-- Data for Name: Poll; Type: TABLE DATA; Schema: webclicker; Owner: ubuntu
--

COPY "Poll" (poll_id, poll_name, poll_group_id, poll_creation_datetime, poll_expiry_datetime, poll_start_datetime) FROM stdin;
\.


--
-- Name: Poll_poll_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: ubuntu
--

SELECT pg_catalog.setval('"Poll_poll_id_seq"', 1, false);


--
-- Data for Name: Question; Type: TABLE DATA; Schema: webclicker; Owner: dylan
--

COPY "Question" (question_id, question_text, question_poll_id, question_user_id, question_type_id) FROM stdin;
\.


--
-- Data for Name: QuestionType; Type: TABLE DATA; Schema: webclicker; Owner: dylan
--

COPY "QuestionType" (questiontype_id, questiontype_type) FROM stdin;
mmch	Multiple-multiple choice
\.


--
-- Name: Question_question_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: dylan
--

SELECT pg_catalog.setval('"Question_question_id_seq"', 1, false);


--
-- Name: Question_question_poll_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: dylan
--

SELECT pg_catalog.setval('"Question_question_poll_id_seq"', 1, false);


--
-- Name: Question_question_type_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: dylan
--

SELECT pg_catalog.setval('"Question_question_type_id_seq"', 1, false);


--
-- Name: Question_question_user_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: dylan
--

SELECT pg_catalog.setval('"Question_question_user_id_seq"', 1, false);


--
-- Data for Name: Toy; Type: TABLE DATA; Schema: webclicker; Owner: dylan
--

COPY "Toy" (q1, q2a1, q2a2, q2a3, q3, q4) FROM stdin;
\.


--
-- Data for Name: User; Type: TABLE DATA; Schema: webclicker; Owner: ubuntu
--

COPY "User" (user_id, user_name, user_password, user_email, user_salt, user_first_name, user_last_name) FROM stdin;
\.


--
-- Name: User_user_id_seq; Type: SEQUENCE SET; Schema: webclicker; Owner: ubuntu
--

SELECT pg_catalog.setval('"User_user_id_seq"', 1, false);


SET search_path = public, pg_catalog;

--
-- Name: Polls_pkey; Type: CONSTRAINT; Schema: public; Owner: max; Tablespace: 
--

ALTER TABLE ONLY "Polls"
    ADD CONSTRAINT "Polls_pkey" PRIMARY KEY (poll_id);


--
-- Name: Questions_pkey; Type: CONSTRAINT; Schema: public; Owner: max; Tablespace: 
--

ALTER TABLE ONLY "Questions"
    ADD CONSTRAINT "Questions_pkey" PRIMARY KEY (question_poll_id, question_id);


--
-- Name: Responses_pkey; Type: CONSTRAINT; Schema: public; Owner: max; Tablespace: 
--

ALTER TABLE ONLY "Responses"
    ADD CONSTRAINT "Responses_pkey" PRIMARY KEY (responses_poll_id, responses_questions_id);


SET search_path = webclicker, pg_catalog;

--
-- Name: Group_pkey; Type: CONSTRAINT; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY "Group"
    ADD CONSTRAINT "Group_pkey" PRIMARY KEY (group_id);


--
-- Name: Poll_pkey; Type: CONSTRAINT; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY "Poll"
    ADD CONSTRAINT "Poll_pkey" PRIMARY KEY (poll_id);


--
-- Name: QuestionType_pkey; Type: CONSTRAINT; Schema: webclicker; Owner: dylan; Tablespace: 
--

ALTER TABLE ONLY "QuestionType"
    ADD CONSTRAINT "QuestionType_pkey" PRIMARY KEY (questiontype_id);


--
-- Name: Question_pkey; Type: CONSTRAINT; Schema: webclicker; Owner: dylan; Tablespace: 
--

ALTER TABLE ONLY "Question"
    ADD CONSTRAINT "Question_pkey" PRIMARY KEY (question_id);


--
-- Name: User_pkey; Type: CONSTRAINT; Schema: webclicker; Owner: ubuntu; Tablespace: 
--

ALTER TABLE ONLY "User"
    ADD CONSTRAINT "User_pkey" PRIMARY KEY (user_id);


--
-- Name: GroupUser_groupuser_group_id_fkey; Type: FK CONSTRAINT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "GroupUser"
    ADD CONSTRAINT "GroupUser_groupuser_group_id_fkey" FOREIGN KEY (groupuser_group_id) REFERENCES "Group"(group_id) ON DELETE RESTRICT;


--
-- Name: GroupUser_groupuser_id_fkey; Type: FK CONSTRAINT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "GroupUser"
    ADD CONSTRAINT "GroupUser_groupuser_id_fkey" FOREIGN KEY (groupuser_id) REFERENCES "User"(user_id);


--
-- Name: Poll_poll_group_id_fkey; Type: FK CONSTRAINT; Schema: webclicker; Owner: ubuntu
--

ALTER TABLE ONLY "Poll"
    ADD CONSTRAINT "Poll_poll_group_id_fkey" FOREIGN KEY (poll_group_id) REFERENCES "Group"(group_id);


--
-- Name: Question_question_type_id_fkey; Type: FK CONSTRAINT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question"
    ADD CONSTRAINT "Question_question_type_id_fkey" FOREIGN KEY (question_type_id) REFERENCES "QuestionType"(questiontype_id);


--
-- Name: Question_question_user_id_fkey; Type: FK CONSTRAINT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question"
    ADD CONSTRAINT "Question_question_user_id_fkey" FOREIGN KEY (question_user_id) REFERENCES "User"(user_id) ON DELETE RESTRICT;


--
-- Name: poll_id; Type: FK CONSTRAINT; Schema: webclicker; Owner: dylan
--

ALTER TABLE ONLY "Question"
    ADD CONSTRAINT poll_id FOREIGN KEY (question_poll_id) REFERENCES "Poll"(poll_id) ON DELETE RESTRICT;


--
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

